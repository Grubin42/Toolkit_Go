# docker-compose.yml
version: '3.8'

services:
  client-app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.client
    ports:
      - "${CLIENT_PORT}:8081"
    volumes:
      - ${UPLOADS_DIR}:/uploads
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    depends_on:
      - mysql
    networks:
      - app-network

  admin-app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.admin
    ports:
      - "${ADMIN_PORT}:8080"
    volumes:
      - ${UPLOADS_DIR}:/uploads
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    depends_on:
      - mysql
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge